// Code generated by protoc-gen-go. DO NOT EDIT.
// source: distributor-service.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VideoCodec int32

const (
	VideoCodec_Libx264 VideoCodec = 0
	VideoCodec_Libx265 VideoCodec = 1
	VideoCodec_Vpx     VideoCodec = 2
	VideoCodec_Vp8     VideoCodec = 3
	VideoCodec_Vp9     VideoCodec = 4
)

var VideoCodec_name = map[int32]string{
	0: "Libx264",
	1: "Libx265",
	2: "Vpx",
	3: "Vp8",
	4: "Vp9",
}

var VideoCodec_value = map[string]int32{
	"Libx264": 0,
	"Libx265": 1,
	"Vpx":     2,
	"Vp8":     3,
	"Vp9":     4,
}

func (x VideoCodec) String() string {
	return proto.EnumName(VideoCodec_name, int32(x))
}

func (VideoCodec) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aa095822aff8ecc1, []int{0}
}

type AudioCodec int32

const (
	AudioCodec_Aac  AudioCodec = 0
	AudioCodec_Ac3  AudioCodec = 1
	AudioCodec_Opus AudioCodec = 2
)

var AudioCodec_name = map[int32]string{
	0: "Aac",
	1: "Ac3",
	2: "Opus",
}

var AudioCodec_value = map[string]int32{
	"Aac":  0,
	"Ac3":  1,
	"Opus": 2,
}

func (x AudioCodec) String() string {
	return proto.EnumName(AudioCodec_name, int32(x))
}

func (AudioCodec) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aa095822aff8ecc1, []int{1}
}

type MediaFileType int32

const (
	MediaFileType_Mp4  MediaFileType = 0
	MediaFileType_Mkv  MediaFileType = 1
	MediaFileType_Webm MediaFileType = 2
)

var MediaFileType_name = map[int32]string{
	0: "Mp4",
	1: "Mkv",
	2: "Webm",
}

var MediaFileType_value = map[string]int32{
	"Mp4":  0,
	"Mkv":  1,
	"Webm": 2,
}

func (x MediaFileType) String() string {
	return proto.EnumName(MediaFileType_name, int32(x))
}

func (MediaFileType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aa095822aff8ecc1, []int{2}
}

type UploadStatusCode int32

const (
	UploadStatusCode_Unknown UploadStatusCode = 0
	UploadStatusCode_Ok      UploadStatusCode = 1
	UploadStatusCode_Failed  UploadStatusCode = 2
)

var UploadStatusCode_name = map[int32]string{
	0: "Unknown",
	1: "Ok",
	2: "Failed",
}

var UploadStatusCode_value = map[string]int32{
	"Unknown": 0,
	"Ok":      1,
	"Failed":  2,
}

func (x UploadStatusCode) String() string {
	return proto.EnumName(UploadStatusCode_name, int32(x))
}

func (UploadStatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_aa095822aff8ecc1, []int{3}
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa095822aff8ecc1, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type ClusterClientOffer struct {
	MaxConcurrentJobs    int64    `protobuf:"varint,1,opt,name=max_concurrent_jobs,json=maxConcurrentJobs,proto3" json:"max_concurrent_jobs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterClientOffer) Reset()         { *m = ClusterClientOffer{} }
func (m *ClusterClientOffer) String() string { return proto.CompactTextString(m) }
func (*ClusterClientOffer) ProtoMessage()    {}
func (*ClusterClientOffer) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa095822aff8ecc1, []int{1}
}

func (m *ClusterClientOffer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterClientOffer.Unmarshal(m, b)
}
func (m *ClusterClientOffer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterClientOffer.Marshal(b, m, deterministic)
}
func (m *ClusterClientOffer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterClientOffer.Merge(m, src)
}
func (m *ClusterClientOffer) XXX_Size() int {
	return xxx_messageInfo_ClusterClientOffer.Size(m)
}
func (m *ClusterClientOffer) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterClientOffer.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterClientOffer proto.InternalMessageInfo

func (m *ClusterClientOffer) GetMaxConcurrentJobs() int64 {
	if m != nil {
		return m.MaxConcurrentJobs
	}
	return 0
}

type VideoSettings struct {
	Codec                VideoCodec `protobuf:"varint,1,opt,name=codec,proto3,enum=VideoCodec" json:"codec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *VideoSettings) Reset()         { *m = VideoSettings{} }
func (m *VideoSettings) String() string { return proto.CompactTextString(m) }
func (*VideoSettings) ProtoMessage()    {}
func (*VideoSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa095822aff8ecc1, []int{2}
}

func (m *VideoSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoSettings.Unmarshal(m, b)
}
func (m *VideoSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoSettings.Marshal(b, m, deterministic)
}
func (m *VideoSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoSettings.Merge(m, src)
}
func (m *VideoSettings) XXX_Size() int {
	return xxx_messageInfo_VideoSettings.Size(m)
}
func (m *VideoSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoSettings.DiscardUnknown(m)
}

var xxx_messageInfo_VideoSettings proto.InternalMessageInfo

func (m *VideoSettings) GetCodec() VideoCodec {
	if m != nil {
		return m.Codec
	}
	return VideoCodec_Libx264
}

type AudioSettings struct {
	Codec                AudioCodec `protobuf:"varint,2,opt,name=codec,proto3,enum=AudioCodec" json:"codec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AudioSettings) Reset()         { *m = AudioSettings{} }
func (m *AudioSettings) String() string { return proto.CompactTextString(m) }
func (*AudioSettings) ProtoMessage()    {}
func (*AudioSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa095822aff8ecc1, []int{3}
}

func (m *AudioSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AudioSettings.Unmarshal(m, b)
}
func (m *AudioSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AudioSettings.Marshal(b, m, deterministic)
}
func (m *AudioSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AudioSettings.Merge(m, src)
}
func (m *AudioSettings) XXX_Size() int {
	return xxx_messageInfo_AudioSettings.Size(m)
}
func (m *AudioSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_AudioSettings.DiscardUnknown(m)
}

var xxx_messageInfo_AudioSettings proto.InternalMessageInfo

func (m *AudioSettings) GetCodec() AudioCodec {
	if m != nil {
		return m.Codec
	}
	return AudioCodec_Aac
}

type TranscodingSettings struct {
	VideoSettings        *VideoSettings `protobuf:"bytes,1,opt,name=video_settings,json=videoSettings,proto3" json:"video_settings,omitempty"`
	AudioSettings        *AudioSettings `protobuf:"bytes,2,opt,name=audio_settings,json=audioSettings,proto3" json:"audio_settings,omitempty"`
	MediaFileType        MediaFileType  `protobuf:"varint,3,opt,name=media_file_type,json=mediaFileType,proto3,enum=MediaFileType" json:"media_file_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TranscodingSettings) Reset()         { *m = TranscodingSettings{} }
func (m *TranscodingSettings) String() string { return proto.CompactTextString(m) }
func (*TranscodingSettings) ProtoMessage()    {}
func (*TranscodingSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa095822aff8ecc1, []int{4}
}

func (m *TranscodingSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TranscodingSettings.Unmarshal(m, b)
}
func (m *TranscodingSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TranscodingSettings.Marshal(b, m, deterministic)
}
func (m *TranscodingSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TranscodingSettings.Merge(m, src)
}
func (m *TranscodingSettings) XXX_Size() int {
	return xxx_messageInfo_TranscodingSettings.Size(m)
}
func (m *TranscodingSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TranscodingSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TranscodingSettings proto.InternalMessageInfo

func (m *TranscodingSettings) GetVideoSettings() *VideoSettings {
	if m != nil {
		return m.VideoSettings
	}
	return nil
}

func (m *TranscodingSettings) GetAudioSettings() *AudioSettings {
	if m != nil {
		return m.AudioSettings
	}
	return nil
}

func (m *TranscodingSettings) GetMediaFileType() MediaFileType {
	if m != nil {
		return m.MediaFileType
	}
	return MediaFileType_Mp4
}

type Job struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ReferenceNumber      int64                `protobuf:"varint,2,opt,name=reference_number,json=referenceNumber,proto3" json:"reference_number,omitempty"`
	TranscodingSettings  *TranscodingSettings `protobuf:"bytes,3,opt,name=transcoding_settings,json=transcodingSettings,proto3" json:"transcoding_settings,omitempty"`
	InputFileName        string               `protobuf:"bytes,4,opt,name=input_file_name,json=inputFileName,proto3" json:"input_file_name,omitempty"`
	InputFileData        []byte               `protobuf:"bytes,5,opt,name=input_file_data,json=inputFileData,proto3" json:"input_file_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa095822aff8ecc1, []int{5}
}

func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (m *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(m, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Job) GetReferenceNumber() int64 {
	if m != nil {
		return m.ReferenceNumber
	}
	return 0
}

func (m *Job) GetTranscodingSettings() *TranscodingSettings {
	if m != nil {
		return m.TranscodingSettings
	}
	return nil
}

func (m *Job) GetInputFileName() string {
	if m != nil {
		return m.InputFileName
	}
	return ""
}

func (m *Job) GetInputFileData() []byte {
	if m != nil {
		return m.InputFileData
	}
	return nil
}

type Result struct {
	JobId                string           `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	JobReferenceNumber   int64            `protobuf:"varint,2,opt,name=job_reference_number,json=jobReferenceNumber,proto3" json:"job_reference_number,omitempty"`
	StatusCode           UploadStatusCode `protobuf:"varint,3,opt,name=status_code,json=statusCode,proto3,enum=UploadStatusCode" json:"status_code,omitempty"`
	OutputFileData       []byte           `protobuf:"bytes,4,opt,name=output_file_data,json=outputFileData,proto3" json:"output_file_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa095822aff8ecc1, []int{6}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *Result) GetJobReferenceNumber() int64 {
	if m != nil {
		return m.JobReferenceNumber
	}
	return 0
}

func (m *Result) GetStatusCode() UploadStatusCode {
	if m != nil {
		return m.StatusCode
	}
	return UploadStatusCode_Unknown
}

func (m *Result) GetOutputFileData() []byte {
	if m != nil {
		return m.OutputFileData
	}
	return nil
}

func init() {
	proto.RegisterEnum("VideoCodec", VideoCodec_name, VideoCodec_value)
	proto.RegisterEnum("AudioCodec", AudioCodec_name, AudioCodec_value)
	proto.RegisterEnum("MediaFileType", MediaFileType_name, MediaFileType_value)
	proto.RegisterEnum("UploadStatusCode", UploadStatusCode_name, UploadStatusCode_value)
	proto.RegisterType((*Empty)(nil), "Empty")
	proto.RegisterType((*ClusterClientOffer)(nil), "ClusterClientOffer")
	proto.RegisterType((*VideoSettings)(nil), "VideoSettings")
	proto.RegisterType((*AudioSettings)(nil), "AudioSettings")
	proto.RegisterType((*TranscodingSettings)(nil), "TranscodingSettings")
	proto.RegisterType((*Job)(nil), "Job")
	proto.RegisterType((*Result)(nil), "Result")
}

func init() { proto.RegisterFile("distributor-service.proto", fileDescriptor_aa095822aff8ecc1) }

var fileDescriptor_aa095822aff8ecc1 = []byte{
	// 632 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x94, 0xdb, 0x6e, 0xdb, 0x38,
	0x10, 0x86, 0x2d, 0xc9, 0x87, 0xdd, 0x71, 0xac, 0x30, 0x74, 0x16, 0xf0, 0xe6, 0x2a, 0xf1, 0xc5,
	0xc2, 0xeb, 0xb6, 0x4a, 0xea, 0x1c, 0xd0, 0x5e, 0xa6, 0x4e, 0x53, 0xd4, 0x68, 0x12, 0x40, 0x39,
	0x14, 0xe8, 0x8d, 0x40, 0x49, 0x74, 0x40, 0x5b, 0x22, 0x05, 0x91, 0x72, 0x9d, 0xa7, 0xea, 0x03,
	0xf4, 0x49, 0xfa, 0x36, 0x85, 0x28, 0xd7, 0x8a, 0xd2, 0xf4, 0x6e, 0xf4, 0xcf, 0xfc, 0xe0, 0x37,
	0xd4, 0x0c, 0xe1, 0xdf, 0x90, 0x49, 0x95, 0x32, 0x3f, 0x53, 0x22, 0x7d, 0x25, 0x69, 0xba, 0x60,
	0x01, 0x75, 0x92, 0x54, 0x28, 0xd1, 0x6f, 0x41, 0xe3, 0x7d, 0x9c, 0xa8, 0x87, 0xfe, 0x19, 0xe0,
	0x71, 0x94, 0x49, 0x45, 0xd3, 0x71, 0xc4, 0x28, 0x57, 0x57, 0xd3, 0x29, 0x4d, 0xb1, 0x03, 0xdd,
	0x98, 0x2c, 0xbd, 0x40, 0xf0, 0x20, 0x4b, 0x53, 0xca, 0x95, 0x37, 0x13, 0xbe, 0xec, 0x19, 0xbb,
	0xc6, 0xc0, 0x72, 0xb7, 0x62, 0xb2, 0x1c, 0xaf, 0x33, 0x13, 0xe1, 0xcb, 0xfe, 0x08, 0x3a, 0x77,
	0x2c, 0xa4, 0xe2, 0x9a, 0x2a, 0xc5, 0xf8, 0xbd, 0xc4, 0x7b, 0xd0, 0x08, 0x44, 0x48, 0x03, 0x6d,
	0xb1, 0x47, 0x6d, 0x47, 0xa7, 0xc7, 0xb9, 0xe4, 0x16, 0x99, 0xdc, 0x73, 0x9a, 0x85, 0xec, 0x19,
	0x8f, 0xb9, 0xf2, 0xe8, 0x74, 0xc5, 0xf3, 0xdd, 0x80, 0xee, 0x4d, 0x4a, 0xb8, 0x0c, 0x44, 0xc8,
	0xf8, 0xfd, 0xda, 0x7a, 0x0c, 0xf6, 0x22, 0x3f, 0xc0, 0x93, 0x2b, 0x45, 0x9f, 0xdb, 0x1e, 0xd9,
	0x4e, 0x05, 0xcb, 0xed, 0x2c, 0x2a, 0x94, 0xc7, 0x60, 0x93, 0xfc, 0x8c, 0xd2, 0x66, 0xae, 0x6c,
	0x15, 0x32, 0xb7, 0x43, 0x2a, 0xa0, 0x27, 0xb0, 0x19, 0xd3, 0x90, 0x11, 0x6f, 0xca, 0x22, 0xea,
	0xa9, 0x87, 0x84, 0xf6, 0x2c, 0x8d, 0x6c, 0x3b, 0x17, 0xb9, 0x7e, 0xce, 0x22, 0x7a, 0xf3, 0x90,
	0x50, 0xb7, 0x13, 0x3f, 0xfe, 0xec, 0xff, 0x30, 0xc0, 0x9a, 0x08, 0x1f, 0xdb, 0x60, 0xb2, 0x50,
	0x13, 0xfe, 0xed, 0x9a, 0x2c, 0xc4, 0xff, 0x03, 0x4a, 0xe9, 0x94, 0xa6, 0x94, 0x07, 0xd4, 0xe3,
	0x59, 0xec, 0xd3, 0x54, 0x83, 0x58, 0xee, 0xe6, 0x5a, 0xbf, 0xd4, 0x32, 0xfe, 0x00, 0xdb, 0xaa,
	0xec, 0xbf, 0xe4, 0xb6, 0x34, 0xf7, 0xb6, 0xf3, 0xcc, 0xe5, 0xb8, 0x5d, 0xf5, 0xcc, 0x8d, 0xfd,
	0x07, 0x9b, 0x8c, 0x27, 0x99, 0x2a, 0x7a, 0xe0, 0x24, 0xa6, 0xbd, 0xba, 0x06, 0xea, 0x68, 0x39,
	0x67, 0xbe, 0x24, 0x31, 0x7d, 0x52, 0x17, 0x12, 0x45, 0x7a, 0x8d, 0x5d, 0x63, 0xb0, 0xf1, 0xa8,
	0xee, 0x8c, 0x28, 0xd2, 0xff, 0x66, 0x40, 0xd3, 0xa5, 0x32, 0x8b, 0x14, 0xfe, 0x07, 0x9a, 0x33,
	0xe1, 0x7b, 0xeb, 0x16, 0x1b, 0x33, 0xe1, 0x7f, 0x0c, 0xf1, 0x01, 0x6c, 0xe7, 0xf2, 0x1f, 0x3a,
	0xc5, 0x33, 0xe1, 0xbb, 0x4f, 0x9a, 0x1d, 0x41, 0x5b, 0x2a, 0xa2, 0x32, 0xe9, 0xe5, 0x7f, 0x7f,
	0x75, 0xc7, 0x5b, 0xce, 0x6d, 0x12, 0x09, 0x12, 0x5e, 0xeb, 0x4c, 0x3e, 0x1d, 0x2e, 0xc8, 0x75,
	0x8c, 0x07, 0x80, 0x44, 0xa6, 0xaa, 0xc0, 0x75, 0x0d, 0x6c, 0x17, 0xfa, 0x2f, 0xe2, 0xe1, 0x29,
	0x40, 0x39, 0x94, 0xb8, 0x0d, 0xad, 0x4f, 0xcc, 0x5f, 0x8e, 0x4e, 0x8e, 0x50, 0xad, 0xfc, 0x38,
	0x46, 0x06, 0x6e, 0x81, 0x75, 0x97, 0x2c, 0x91, 0x59, 0x04, 0x6f, 0x90, 0x55, 0x04, 0x6f, 0x51,
	0x7d, 0x38, 0x00, 0x28, 0x67, 0x34, 0x97, 0x4f, 0x49, 0x80, 0x6a, 0x3a, 0x08, 0x0e, 0x91, 0x81,
	0xff, 0x82, 0xfa, 0x55, 0x92, 0x49, 0x64, 0x0e, 0x5f, 0x40, 0xa7, 0x32, 0x1a, 0x79, 0xcd, 0x45,
	0x72, 0x54, 0x14, 0x5f, 0xcc, 0x17, 0x45, 0xf1, 0x67, 0xea, 0xc7, 0xc8, 0x1c, 0x1e, 0x02, 0x7a,
	0xda, 0x63, 0x8e, 0x74, 0xcb, 0xe7, 0x5c, 0x7c, 0xe5, 0xa8, 0x86, 0x9b, 0x60, 0x5e, 0xcd, 0x91,
	0x81, 0x01, 0x9a, 0xe7, 0x84, 0x45, 0x34, 0x44, 0xe6, 0x88, 0x02, 0x3e, 0x2b, 0xd7, 0xfd, 0xba,
	0xd8, 0x76, 0xfc, 0x12, 0xda, 0x13, 0xc1, 0xf8, 0x6a, 0xc5, 0x71, 0xd7, 0xf9, 0x7d, 0xd9, 0x77,
	0xea, 0xce, 0x44, 0xf8, 0xfd, 0xda, 0x81, 0x81, 0xf7, 0x60, 0xa3, 0x38, 0x78, 0xf5, 0x27, 0x5b,
	0x4e, 0x11, 0xec, 0x34, 0x9d, 0xe2, 0xb5, 0xa8, 0xbd, 0xdb, 0xf8, 0x02, 0xc9, 0xfc, 0x7e, 0x9f,
	0x24, 0x6c, 0x7f, 0xf1, 0xda, 0x6f, 0xea, 0xd7, 0xe4, 0xf0, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x68, 0xde, 0xe6, 0xad, 0x6a, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DistributorServiceClient is the client API for DistributorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DistributorServiceClient interface {
	JoinCluster(ctx context.Context, in *ClusterClientOffer, opts ...grpc.CallOption) (DistributorService_JoinClusterClient, error)
	UploadResult(ctx context.Context, in *Result, opts ...grpc.CallOption) (*Empty, error)
}

type distributorServiceClient struct {
	cc *grpc.ClientConn
}

func NewDistributorServiceClient(cc *grpc.ClientConn) DistributorServiceClient {
	return &distributorServiceClient{cc}
}

func (c *distributorServiceClient) JoinCluster(ctx context.Context, in *ClusterClientOffer, opts ...grpc.CallOption) (DistributorService_JoinClusterClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DistributorService_serviceDesc.Streams[0], "/DistributorService/JoinCluster", opts...)
	if err != nil {
		return nil, err
	}
	x := &distributorServiceJoinClusterClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DistributorService_JoinClusterClient interface {
	Recv() (*Job, error)
	grpc.ClientStream
}

type distributorServiceJoinClusterClient struct {
	grpc.ClientStream
}

func (x *distributorServiceJoinClusterClient) Recv() (*Job, error) {
	m := new(Job)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *distributorServiceClient) UploadResult(ctx context.Context, in *Result, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/DistributorService/UploadResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DistributorServiceServer is the server API for DistributorService service.
type DistributorServiceServer interface {
	JoinCluster(*ClusterClientOffer, DistributorService_JoinClusterServer) error
	UploadResult(context.Context, *Result) (*Empty, error)
}

// UnimplementedDistributorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDistributorServiceServer struct {
}

func (*UnimplementedDistributorServiceServer) JoinCluster(req *ClusterClientOffer, srv DistributorService_JoinClusterServer) error {
	return status.Errorf(codes.Unimplemented, "method JoinCluster not implemented")
}
func (*UnimplementedDistributorServiceServer) UploadResult(ctx context.Context, req *Result) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadResult not implemented")
}

func RegisterDistributorServiceServer(s *grpc.Server, srv DistributorServiceServer) {
	s.RegisterService(&_DistributorService_serviceDesc, srv)
}

func _DistributorService_JoinCluster_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ClusterClientOffer)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DistributorServiceServer).JoinCluster(m, &distributorServiceJoinClusterServer{stream})
}

type DistributorService_JoinClusterServer interface {
	Send(*Job) error
	grpc.ServerStream
}

type distributorServiceJoinClusterServer struct {
	grpc.ServerStream
}

func (x *distributorServiceJoinClusterServer) Send(m *Job) error {
	return x.ServerStream.SendMsg(m)
}

func _DistributorService_UploadResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Result)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DistributorServiceServer).UploadResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DistributorService/UploadResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DistributorServiceServer).UploadResult(ctx, req.(*Result))
	}
	return interceptor(ctx, in, info, handler)
}

var _DistributorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DistributorService",
	HandlerType: (*DistributorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UploadResult",
			Handler:    _DistributorService_UploadResult_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "JoinCluster",
			Handler:       _DistributorService_JoinCluster_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "distributor-service.proto",
}
